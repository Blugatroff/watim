import "./core.watim" as Core (unreachable)
import "./fmt.watim" as Fmt (Formatter)

variant Maybe<T> {
    case Some -> T
    case None
}

fn or-default<T>(o: Maybe<T>, default: T) -> T {
    $o match {
        case Some -> {}
        case None -> { $default }
    }
}

fn assert-some<T>(o: Maybe<T>) -> T {
    $o match {
        case Some -> {}
        case None -> { unreachable<T> }
    }
}

fn format<T>(fmt: .Formatter, format-inner: (.Formatter, .T ->), self: .Maybe<T>) {
    $self match {
        case None -> { $fmt "None" Fmt:write }
        case Some -> {
            $fmt "(Some " Fmt:write
            $fmt flip $format-inner ->
            $fmt ")" Fmt:write
        }
    }
}

