import "./alloc.watim" as A
import "./string2.watim" as S
import "./io.watim" as IO

struct Formatter {
    out: S:String
    indent-level: i32
}

fn Formatter-new() -> Formatter {
    local self: Formatter
    S:String-empty @self.out
    0 @self.indent-level
    ?self
}
fn Formatter-into-string(self: Formatter) -> S:String {
    ?self.out
}
fn Formatter-write(self: .Formatter, ptr: .i32, len: i32) {
    &self.out ?ptr ?len S:String-append
}
fn Formatter-write-indent(self: .Formatter) {
    local i: i32
    loop {
        ?i ?self.indent-level = if { break }
        ?self "  " Formatter-write
        ?i 1 + @i
    }
}
fn Formatter-indent(self: .Formatter) {
    ?self.indent-level 1 + @self.indent-level
}
fn Formatter-dedent(self: .Formatter) {
    ?self.indent-level 0 = if {
        "Formatter: tried to dedent below 0" IO:abort
    }
    ?self.indent-level 1 - @self.indent-level
}

