import "../std/args.watim" as Args
import "../std/byte-slice.watim" as ByteSlice (ByteSlice)
import "../std/io.watim" as IO
import "../std/fs.watim" as FS
import "../std/core.watim" as Core
import "../std/arena.watim" as Arena (Arena)
import "../std/array.watim" as Array

fn main "_start" () {
    Arena:init-temp

    0 !.Arena Arena:temp @temp @save
    $temp Args:get-args @args

    $args.len 1 le if {
        2 "\ncat written in Watim\n" IO:write-all IO:check
        2 "\tUsage: ./run.sh ./samples/cat.watim <file1> <file2> ...\n" IO:write-all IO:check
        1 Core:exit
    }

    $temp FS:init IO:check @fs

    1 @arg-index
    loop {
        $args.len $arg-index = if { break }
        &fs &args $arg-index Array:get<ByteSlice> ~ ByteSlice:unpack
        1 1 = 0 1 = FS:create-rights
        0 1 = 0 1 = FS:create-rights
        0 1 = FS:create-oflags
        FS:open-file IO:check @fd

        loop {
            $temp Arena:temp @temp @save
            128 @buf-len
            $temp $buf-len Arena:alloc-bytes @buf
            $fd $buf $buf-len IO:read IO:check @read
            $read 0 = if { break }
            1 $buf $read IO:write-all IO:check
            $temp $save Arena:restore
        }
        $arg-index 1 + #arg-index
        $fd FS:close IO:check
    }

    $temp $save Arena:restore
}

