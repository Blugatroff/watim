import "../std/alloc.watim" as A
import "../std/args.watim" as ARGS
import "../std/string.watim" as S
import "../std/io.watim" as IO
import "../std/fs.watim" as FS

memory MEM: i32 16384 4;

fn main "_start" () {
    local args: .S:StrVec
    local str: .S:Str
    A:enable-logging
    A:disable-logging
    $MEM 16384 A:init
    ARGS:get-args #args
    
    $args S:StrVec-print
    1 "\n" IO:write-all IO:check
    1 "\n" IO:write-all IO:check

    $args 1 S:StrVec-get FS:read-file IO:check #str
    1 $str S:Str-get IO:write-all IO:check
    1 "\n" IO:write-all IO:check
    A:report
    $str S:Str-free
    $args S:StrVec-free
    A:report
    A:is-empty not if {
        A:root A:print-alloc-list
        1 "MEMORY LEAK DETECTED\n" IO:write-all IO:check
    }
}

