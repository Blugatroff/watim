[== Stdin Compiler ==]
struct Foo {}
struct Bar {
	foo: Foo
	baz: .Baz
	fun: (i32, Foo -> .Baz)
}
variant Baz {
	case Foo -> Bar
}
[== Args Compiler ==]
check
-
--quiet
[== Status Compiler ==]
0
[== Stdout Compiler ==]
(Map
  "-"=(Module
    imports=(Map),
    custom-types=(Map
      "Foo"=(Struct
        name=(IDENT Foo 1 8),
        generic-parameters=[],
        fields=[]),
      "Bar"=(Struct
        name=(IDENT Bar 2 8),
        generic-parameters=[],
        fields=[
          (NamedType (IDENT foo 3 2) (CustomType 0 0 [])),
          (NamedType (IDENT baz 4 2) (Ptr (CustomType 0 2 []))),
          (NamedType (IDENT fun 5 2) (FunType (LEFT_PAREN ( 5 7) [I32, (CustomType 0 0 [])] [(Ptr (CustomType 0 2 []))]))]),
      "Baz"=(Variant
        name=(IDENT Baz 7 9),
        generic-parameters=[],
        cases=[
          (VariantCase (IDENT Foo 8 7) (Some (CustomType 0 1 [])))])),
    globals=(Map)))

