[== Stdin Compiler ==]
extern "wasi_snapshot_preview1" "proc_exit" fn proc_exit(code: i32)
variant Foo {
	case A
	case B -> i32
}

fn main "_start" () {
	block {
		42
		make Foo.A match Foo {
			case A -> { break }
			case _ -> { drop drop 8 }
		} proc_exit
		37
	} proc_exit
}
[== Status Compiler ==]
0
[== Stdout Compiler ==]
(module
	(import "wasi_snapshot_preview1" "proc_exit" (func $0:proc_exit (param $code i32)))
	(memory 1 65536)
	(export "memory" (memory 0))
	(table funcref (elem))
	(global $stac:k (mut i32) (i32.const 0))
	(data (i32.const 0) "")
	(func $0:main (export "_start")
		(block $block (result i32)
			i32.const 42
			i64.const 0 ;; make Foo.A
			;; match on Foo
			call $intrinsic:dupi64 i32.wrap_i64 i32.const 0 i32.eq (if (param i32) (param i64) (result i32)
			(then
				drop
				br $block
			)
			(else
				drop
				drop
				i32.const 8
			))
			call $0:proc_exit
			i32.const 37
		)
		call $0:proc_exit
	)
	(func $intrinsic:flip (param $a i32) (param $b i32) (result i32 i32) local.get $b local.get $a)
	(func $intrinsic:dupi32 (param $a i32) (result i32 i32) local.get $a local.get $a)
	(func $intrinsic:dupi64 (param $a i64) (result i64 i64) local.get $a local.get $a)
	(func $intrinsic:rotate-left (param $a i32) (param $b i32) (param $c i32) (result i32 i32 i32) local.get $b local.get $c local.get $a)
)
[== Status ==]
42
