
================================
import "./std/alloc.watim" as A
import "./std/util.watim" as U
import "./std/io.watim" as IO
import "./std/core.watim" as CORE

memory MEM: i32 1000 4;

fn main "_start" () {
    local a: .i32
    local b: .i32
    local i: i32

    $MEM 1000 A:init

    100 A:alloc #a
    100 A:alloc #b

    $a $b = !i32 IO:print 1 10 IO:write_byte IO:check
    
    loop {
        $i 256 = if { break }
        $b $i + $a $i + load8 store8
        $i 1 + #i
    }
    0 #i
    loop {
        $i 256 = if { break }
        $b $i + 8 store8
        $i 1 + #i
    }
    $a 85 + load8 IO:print 1 10 IO:write_byte IO:check
    $b load8 IO:print 1 10 IO:write_byte IO:check
    $b 90 + load8 IO:print 1 10 IO:write_byte IO:check
}
================================
0
0
8
8
