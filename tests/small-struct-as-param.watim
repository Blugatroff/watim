[== Stdin Compiler ==]
extern "wasi_snapshot_preview1" "proc_exit" fn proc_exit(code: i32)

struct Small { value: i32 }

fn add(s: Small) -> i32 {
	$s.value 1 +
}

fn main "_start" () {
	3 make Small add proc_exit
}
[== Status Compiler ==]
0
[== Stdout Compiler ==]
(module
	(import "wasi_snapshot_preview1" "proc_exit" (func $0:proc_exit (param $code i32)))
	(memory 1 65536)
	(export "memory" (memory 0))
	(table funcref (elem))
	(global $stac:k (mut i32) (i32.const 0))
	(data (i32.const 0) "")
	(func $0:add (param $s i32) (result i32)
		local.get $s
		i32.const 1
		i32.add
	)
	(func $0:main (export "_start")
		i32.const 3
		;; make Small
		call $0:add
		call $0:proc_exit
	)
	(func $intrinsic:flip (param $a i32) (param $b i32) (result i32 i32) local.get $b local.get $a)
	(func $intrinsic:dupi32 (param $a i32) (result i32 i32) local.get $a local.get $a)
	(func $intrinsic:rotate-left (param $a i32) (param $b i32) (param $c i32) (result i32 i32 i32) local.get $b local.get $c local.get $a)
)
[== Status ==]
4
