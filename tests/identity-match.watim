[== Stdin Compiler ==]
variant Foo { case Bar case Baz }

fn main "_start" (foo: Foo) -> Foo {
	42 @a
	$foo match {
		case _ -> {
			3 @a
		}
	}
	$a drop
}
[== Args Compiler ==]
compile
-
--quiet
[== Status Compiler ==]
0
[== Stdout Compiler ==]
(module
	(memory 1 65536)
	(export "memory" (memory 0))
	(table funcref (elem))
	(global $stac:k (mut i32) (i32.const 0))
	(data (i32.const 0) "")
	(func $0:main (export "_start") (param $foo i32) (result i32)
		(local $a i32)
		(local $a:1:0 i32)
		i32.const 42
		local.set $a
		local.get $foo
		i32.const 3
		local.set $a:1:0
		local.get $a
		drop
	)
	(func $intrinsic:flip (param $a i32) (param $b i32) (result i32 i32) local.get $b local.get $a)
	(func $intrinsic:dupi32 (param $a i32) (result i32 i32) local.get $a local.get $a)
	(func $intrinsic:rotate-left (param $a i32) (param $b i32) (param $c i32) (result i32 i32 i32) local.get $b local.get $c local.get $a)
)
