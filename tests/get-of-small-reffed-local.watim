[== Stdin Compiler ==]
extern "wasi_snapshot_preview1" "proc_exit" fn proc_exit(code: i32)
struct Small {
	x: i32
}
fn foo(s: .Small) {
	&s.x drop
}
fn main "_start" () {
	3 make Small @a
	$a drop
	$a.x drop
	&a foo
	$a.x proc_exit
}
[== Status Compiler ==]
0
[== Stdout Compiler ==]
(module
	(import "wasi_snapshot_preview1" "proc_exit" (func $0:proc_exit (param $code i32)))
	(memory 1 65536)
	(export "memory" (memory 0))
	(table funcref (elem))
	(global $stac:k (mut i32) (i32.const 0))
	(data (i32.const 0) "")
	(func $0:foo (param $s i32)
		local.get $s
		drop
	)
	(func $0:main (export "_start")
		(local $a i32)
		(local $stac:k i32)
		global.get $stac:k local.set $stac:k
		global.get $stac:k global.get $stac:k i32.const 4 i32.add global.set $stac:k local.set $a
		i32.const 3
		;; make Small
		local.get $a call $intrinsic:flip i32.store
		local.get $a i32.load
		drop
		local.get $a i32.load
		drop
		local.get $a
		call $0:foo
		local.get $a i32.load
		call $0:proc_exit
		local.get $stac:k global.set $stac:k
	)
	(func $intrinsic:flip (param $a i32) (param $b i32) (result i32 i32) local.get $b local.get $a)
	(func $intrinsic:dupi32 (param $a i32) (result i32 i32) local.get $a local.get $a)
	(func $intrinsic:rotate-left (param $a i32) (param $b i32) (param $c i32) (result i32 i32 i32) local.get $b local.get $c local.get $a)
)
[== Status ==]
3
