[== Stdin Compiler ==]
extern "wasi_snapshot_preview1" "proc_exit" fn proc_exit(code: i32)

fn main "_start" () {
	1 2
	loop () -> i32 {
		1 1 = if {
			3 break
		}
	} proc_exit
	drop drop
}
[== Status Compiler ==]
0
[== Stdout Compiler ==]
(module
	(import "wasi_snapshot_preview1" "proc_exit" (func $0:proc_exit (param $code i32)))
	(memory 1 65536)
	(export "memory" (memory 0))
	(table funcref (elem))
	(global $stac:k (mut i32) (i32.const 0))
	(data (i32.const 0) "")
	(func $0:main (export "_start")
		i32.const 1
		i32.const 2
		(block $block  (result i32)
			(loop $loop  (result i32)
				i32.const 1
				i32.const 1
				i32.eq
				(if
					(then
						i32.const 3
						br $block
					)
				)
				br $loop
			)
		)
		call $0:proc_exit
		drop
		drop
	)
	(func $intrinsic:flip (param $a i32) (param $b i32) (result i32 i32) local.get $b local.get $a)
	(func $intrinsic:dupi32 (param $a i32) (result i32 i32) local.get $a local.get $a)
	(func $intrinsic:rotate-left (param $a i32) (param $b i32) (param $c i32) (result i32 i32 i32) local.get $b local.get $c local.get $a)
)
[== Status ==]
3
