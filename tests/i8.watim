[== Stdin Compiler ==]
extern "wasi_snapshot_preview1" "proc_exit" fn proc_exit(code: i32)

struct GetsPadded {
    a: i8
    b: i8
    c: i32
}

fn main "_start" () {
    0 !i8 @f
    &f &f ~ store
    sizeof(i8) proc_exit

    5 !i8 6 !i8 10 make GetsPadded @gp
    &gp.c drop
}
[== Status Compiler ==]
0
[== Stdout Compiler ==]
(module
	(import "wasi_snapshot_preview1" "proc_exit" (func $0:proc_exit (param $code i32)))
	(memory 1 65536)
	(export "memory" (memory 0))
	(table funcref (elem))
	(global $stac:k (mut i32) (i32.const 0))
	(data (i32.const 0) "")
	(func $0:main (export "_start")
		(local $f i32)
		(local $gp i32)
		(local $locl-copy-spac:e i32)
		(local $stac:k i32)
		global.get $stac:k local.set $stac:k
		global.get $stac:k global.get $stac:k i32.const 8 i32.add global.set $stac:k local.set $locl-copy-spac:e
		global.get $stac:k global.get $stac:k i32.const 4 i32.add global.set $stac:k local.set $f
		global.get $stac:k global.get $stac:k i32.const 8 i32.add global.set $stac:k local.set $gp
		i32.const 0
		i32.const 255 i32.and ;; cast to i8
		local.get $f call $intrinsic:flip i32.store8
		local.get $f
		local.get $f
		i32.load8
		i32.store8
		i32.const 1
		call $0:proc_exit
		i32.const 5
		i32.const 255 i32.and ;; cast to i8
		i32.const 6
		i32.const 255 i32.and ;; cast to i8
		i32.const 10
		;; make GetsPadded
			local.get $locl-copy-spac:e i32.const 4 i32.add call $intrinsic:flip i32.store
			local.get $locl-copy-spac:e i32.const 1 i32.add call $intrinsic:flip i32.store8
			local.get $locl-copy-spac:e i32.const 0 i32.add call $intrinsic:flip i32.store8
		local.get $locl-copy-spac:e i32.const 0 i32.add ;; make GetsPadded end
		local.get $gp call $intrinsic:flip i32.const 8 memory.copy
		local.get $gp i32.const 4 i32.add
		drop
		local.get $stac:k global.set $stac:k
	)
	(func $intrinsic:flip (param $a i32) (param $b i32) (result i32 i32) local.get $b local.get $a)
	(func $intrinsic:dupi32 (param $a i32) (result i32 i32) local.get $a local.get $a)
	(func $intrinsic:rotate-left (param $a i32) (param $b i32) (param $c i32) (result i32 i32 i32) local.get $b local.get $c local.get $a)
)
[== Status ==]
1
