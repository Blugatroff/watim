[== Stdin Compiler ==]
extern "wasi_snapshot_preview1" "proc_exit" fn proc_exit(code: i32)

struct Large<T> {
	a: T
	b: T
	c: T
	d: T
}

fn start "_start" () {
	3 mem-grow drop
	65536 4 * set-stack-size
	main
}

fn main() {
	uninit<Large<Large<Large<Large<Large<i32>>>>>> @foo
	42 #foo.a.a.a.a.a
	main
}
[== Args Compiler ==]
compile
-
--guard-stack
[== Status Compiler ==]
0
[== Stdout Compiler ==]
(module
	(import "wasi_snapshot_preview1" "proc_exit" (func $0:proc_exit (param $code i32)))
	(memory 1 65536)
	(export "memory" (memory 0))
	(table funcref (elem))
	(global $stac:k (mut i32) (i32.const 0))
	(global $stack-siz:e (mut i32) (i32.const 65536))
	(data (i32.const 0) "")
	(func $0:start (export "_start")
		i32.const 3
		memory.grow
		drop
		i32.const 65536
		i32.const 4
		i32.mul
		global.set $stack-siz:e
		call $0:main
	)
	(func $0:main
		(local $foo i32)
		(local $locl-copy-spac:e i32)
		(local $stac:k i32)
		global.get $stac:k local.set $stac:k
		global.get $stac:k global.get $stac:k i32.const 4096 i32.add global.set $stac:k local.set $locl-copy-spac:e
		global.get $stac:k global.get $stac:k i32.const 4096 i32.add global.set $stac:k local.set $foo
		call $stack-overflow-guar:d
		local.get $locl-copy-spac:e i32.const 0 i32.add
		local.get $foo call $intrinsic:flip i32.const 4096 memory.copy
		i32.const 42
		local.get $foo call $intrinsic:flip i32.store
		call $0:main
		local.get $stac:k global.set $stac:k
	)
	(func $intrinsic:flip (param $a i32) (param $b i32) (result i32 i32) local.get $b local.get $a)
	(func $intrinsic:dupi32 (param $a i32) (result i32 i32) local.get $a local.get $a)
	(func $intrinsic:rotate-left (param $a i32) (param $b i32) (param $c i32) (result i32 i32 i32) local.get $b local.get $c local.get $a)
	(func $stack-overflow-guar:d i32.const 1 global.get $stac:k global.get $stack-siz:e i32.lt_u i32.div_u drop)
)
[== Status ==]
134
[== Stderr ==]
Error: failed to run main module `./out.wat`

Caused by:
    0: failed to invoke command default
    1: error while executing at wasm backtrace:
           0:    0x10c - <unknown>!stack-overflow-guar:d
           1:     0xca - <unknown>!0:main
           2:     0xe5 - <unknown>!0:main
           3:     0xe5 - <unknown>!0:main
           4:     0xe5 - <unknown>!0:main
           5:     0xe5 - <unknown>!0:main
           6:     0xe5 - <unknown>!0:main
           7:     0xe5 - <unknown>!0:main
           8:     0xe5 - <unknown>!0:main
           9:     0xe5 - <unknown>!0:main
          10:     0xe5 - <unknown>!0:main
          11:     0xe5 - <unknown>!0:main
          12:     0xe5 - <unknown>!0:main
          13:     0xe5 - <unknown>!0:main
          14:     0xe5 - <unknown>!0:main
          15:     0xe5 - <unknown>!0:main
          16:     0xe5 - <unknown>!0:main
          17:     0xe5 - <unknown>!0:main
          18:     0xe5 - <unknown>!0:main
          19:     0xe5 - <unknown>!0:main
          20:     0xe5 - <unknown>!0:main
          21:     0xe5 - <unknown>!0:main
          22:     0xe5 - <unknown>!0:main
          23:     0xe5 - <unknown>!0:main
          24:     0xe5 - <unknown>!0:main
          25:     0xe5 - <unknown>!0:main
          26:     0xe5 - <unknown>!0:main
          27:     0xe5 - <unknown>!0:main
          28:     0xe5 - <unknown>!0:main
          29:     0xe5 - <unknown>!0:main
          30:     0xe5 - <unknown>!0:main
          31:     0xe5 - <unknown>!0:main
          32:     0xe5 - <unknown>!0:main
          33:     0xa7 - <unknown>!0:start
    2: wasm trap: integer divide by zero
