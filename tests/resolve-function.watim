[== Stdin Compiler ==]
fn flip<A, B>(a: A, b: B) -> B, A {
    $b $a
}
[== Args Compiler ==]
check
-
--quiet
[== Status Compiler ==]
0
[== Stdout Compiler ==]
(Map
  "-"=(Module
    imports=(Map),
    custom-types=(Map),
    globals=(Map),
    functions=(Map
      "flip"=(Function
        name=(IDENT flip 1 4),
        export=None,
        signature=(Signature
          generic-parameters=[(IDENT A 1 9), (IDENT B 1 12)],
          parameters=[(NamedType (IDENT a 1 15) (GenericType (IDENT A 1 18) 0)), (NamedType (IDENT b 1 21) (GenericType (IDENT B 1 24) 1))],
          returns=[(GenericType (IDENT B 1 30) 1), (GenericType (IDENT A 1 33) 0)]),
        locals=(Map
          (LocalId "a" 0 0)=(Local (IDENT a 1 15) (GenericType (IDENT A 1 18) 0) False True),
          (LocalId "b" 0 0)=(Local (IDENT b 1 21) (GenericType (IDENT B 1 24) 1) False True)),
        words=[
          (GetLocal (IDENT b 2 6) (LocalId "b" 0 0) (GenericType (IDENT B 1 24) 1) (GenericType (IDENT B 1 24) 1) []),
          (GetLocal (IDENT a 2 9) (LocalId "a" 0 0) (GenericType (IDENT A 1 18) 0) (GenericType (IDENT A 1 18) 0) [])]))))
