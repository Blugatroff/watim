[== Stdin Compiler ==]
extern "wasi_snapshot_preview1" "proc_exit" fn proc_exit(code: i32)

struct Foo {
	baz: bool
	bar: i32
	v: V2
}

struct V2 {
	x: i32
	y: i32
}

fn main "_start" () {
	0 1 =
	42
	5 7 make V2 make Foo @foo

	$foo.bar $foo.v.y + proc_exit
}
[== Status Compiler ==]
0
[== Stdout Compiler ==]
(module
	(import "wasi_snapshot_preview1" "proc_exit" (func $0:proc_exit (param $code i32)))
	(memory 1 65536)
	(export "memory" (memory 0))
	(table funcref (elem))
	(global $stac:k (mut i32) (i32.const 0))
	(data (i32.const 0) "")
	(func $0:main (export "_start")
		(local $foo i32)
		(local $locl-copy-spac:e i32)
		(local $stac:k i32)
		global.get $stac:k local.set $stac:k
		global.get $stac:k global.get $stac:k i32.const 24 i32.add global.set $stac:k local.set $locl-copy-spac:e
		global.get $stac:k global.get $stac:k i32.const 16 i32.add global.set $stac:k local.set $foo
		i32.const 0
		i32.const 1
		i32.eq
		i32.const 42
		i32.const 5
		i32.const 7
		;; make V2
			local.get $locl-copy-spac:e i32.const 4 i32.add call $intrinsic:flip i32.store
			local.get $locl-copy-spac:e i32.const 0 i32.add call $intrinsic:flip i32.store
		local.get $locl-copy-spac:e i32.const 0 i32.add ;; make V2 end
		;; make Foo
			local.get $locl-copy-spac:e i32.const 16 i32.add call $intrinsic:flip i32.const 8 memory.copy
			local.get $locl-copy-spac:e i32.const 12 i32.add call $intrinsic:flip i32.store
			local.get $locl-copy-spac:e i32.const 8 i32.add call $intrinsic:flip i32.store
		local.get $locl-copy-spac:e i32.const 8 i32.add ;; make Foo end
		local.get $foo call $intrinsic:flip i32.const 16 memory.copy
		local.get $foo i32.load offset=4
		local.get $foo i32.load offset=12
		i32.add
		call $0:proc_exit
		local.get $stac:k global.set $stac:k
	)
	(func $intrinsic:flip (param $a i32) (param $b i32) (result i32 i32) local.get $b local.get $a)
	(func $intrinsic:dupi32 (param $a i32) (result i32 i32) local.get $a local.get $a)
	(func $intrinsic:rotate-left (param $a i32) (param $b i32) (param $c i32) (result i32 i32 i32) local.get $b local.get $c local.get $a)
)
[== Status ==]
49
